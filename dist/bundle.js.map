{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://hangman-game/./src/index.ts","webpack://hangman-game/./src/wordList.ts","webpack://hangman-game/webpack/bootstrap","webpack://hangman-game/webpack/before-startup","webpack://hangman-game/webpack/startup","webpack://hangman-game/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wordList_1 = __importDefault(require(\"./wordList\"));\nconst hangmanImg = document.querySelector(\".hangman-box img\");\nconst wordDisplay = document.querySelector(\".word-display\");\nconst guessesText = document.querySelector(\".guesses-text span\");\nconst keyboard = document.querySelector(\".keyboard\");\nconst gameModal = document.querySelector(\".game-modal\");\nconst playAgainBtn = document.querySelector(\".play-again\");\nlet currentWord, correctLetters, wrongGuessCount;\nconst maxGuess = 6;\nconst generateKeyboard = () => {\n    for (let i = 97; i <= 122; i++) {\n        const button = document.createElement(\"button\");\n        button.innerText = String.fromCharCode(i);\n        keyboard.appendChild(button);\n        button.classList.add(\"key\");\n    }\n};\nconst resetGame = () => {\n    correctLetters = [];\n    wrongGuessCount = 0;\n    hangmanImg.src = `images/hangman-${wrongGuessCount}.svg`;\n    guessesText.innerText = `${wrongGuessCount} / ${maxGuess}`;\n    buttons.forEach((btn) => (btn.disabled = false));\n    wordDisplay.innerHTML = currentWord\n        .split(\"\")\n        .map(() => `<li class=\"letter\"></li>`)\n        .join(\"\");\n    gameModal.classList.remove(\"show\");\n};\nconst getRandomWords = () => {\n    const { word, hint } = wordList_1.default[Math.floor(Math.random() * wordList_1.default.length)];\n    currentWord = word.toLowerCase();\n    const hintSpan = document.querySelector(\".hint-text span\");\n    hintSpan.innerText = hint;\n    resetGame();\n};\nconst gameOver = (isVictory) => {\n    setTimeout(() => {\n        const modalText = isVictory\n            ? `Você encontrou a palavra:`\n            : `A palavra certa era:`;\n        const gameModalImg = gameModal.querySelector(\"img\");\n        gameModalImg.src = `images/${isVictory ? \"victory\" : \"lost\"}.gif`;\n        const gameModalH4 = gameModal.querySelector(\"h4\");\n        gameModalH4.innerText = `${isVictory ? \"Parabéns!\" : \"Game Over!\"}`;\n        const gameModalP = gameModal.querySelector(\"p\");\n        gameModalP.innerHTML = `${modalText} <strong>${currentWord}</strong>`;\n        gameModal.classList.add(\"show\");\n    }, 300);\n};\nconst initGame = (button, clickedLetter) => {\n    if (currentWord.includes(clickedLetter)) {\n        [...currentWord].forEach((letter, index) => {\n            if (letter === clickedLetter) {\n                correctLetters.push(letter);\n                wordDisplay.querySelectorAll(\"li\")[index].innerText = letter;\n                wordDisplay.querySelectorAll(\"li\")[index].classList.add(\"guessed\");\n            }\n        });\n    }\n    else {\n        wrongGuessCount++;\n        hangmanImg.src = `images/hangman-${wrongGuessCount}.svg`;\n    }\n    button.disabled = true;\n    guessesText.innerText = `${wrongGuessCount} / ${maxGuess}`;\n    if (wrongGuessCount === maxGuess)\n        return gameOver(false);\n    if (correctLetters.length === currentWord.length)\n        return gameOver(true);\n};\ngenerateKeyboard();\nconst buttons = document.querySelectorAll(\".key\");\nbuttons.forEach((btn) => {\n    document.addEventListener(\"keydown\", (e) => {\n        const key = e.key;\n        if (key === btn.innerHTML) {\n            if (gameModal.classList.contains(\"show\")) {\n                return;\n            }\n            btn.click();\n        }\n    }, false),\n        btn.addEventListener(\"click\", (e) => initGame(e.target, btn.innerHTML));\n});\ngetRandomWords();\nplayAgainBtn.addEventListener(\"click\", getRandomWords);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wordList = [\n    { word: \"viagem\", hint: \"Exploração de novos lugares.\" },\n    { word: \"café\", hint: \"Bebida quente e estimulante.\" },\n    { word: \"montanha\", hint: \"Elevação natural da terra.\" },\n    { word: \"rima\", hint: \"Palavras com sons semelhantes.\" },\n    { word: \"pintura\", hint: \"Arte de criar imagens visuais.\" },\n    { word: \"coração\", hint: \"Órgão que bombeia sangue.\" },\n    { word: \"paraíso\", hint: \"Lugar perfeito e harmonioso.\" },\n    { word: \"família\", hint: \"Parentes próximos e queridos.\" },\n    { word: \"escola\", hint: \"Local de aprendizado.\" },\n    { word: \"dinheiro\", hint: \"Meio de troca e pagamento.\" },\n    { word: \"folha\", hint: \"Parte verde de uma planta.\" },\n    { word: \"tempo\", hint: \"A medida das horas.\" },\n    { word: \"fogo\", hint: \"Uma forma de energia.\" },\n    { word: \"arco-íris\", hint: \"Uma mistura colorida no céu.\" },\n    { word: \"cidade\", hint: \"Grande área urbana.\" },\n    { word: \"amor\", hint: \"Sentimento profundo de afeição.\" },\n    { word: \"livro\", hint: \"Uma coleção de histórias escritas.\" },\n    { word: \"felicidade\", hint: \"Estado de alegria e contentamento.\" },\n    { word: \"computador\", hint: \"Máquina que processa informações.\" },\n    { word: \"chuva\", hint: \"Gotas de água que caem do céu.\" },\n    { word: \"praia\", hint: \"Litoral com areia e água do mar.\" },\n    { word: \"restaurante\", hint: \"Local para refeições.\" },\n    { word: \"sorriso\", hint: \"Expressão facial de alegria.\" },\n    { word: \"mundo\", hint: \"O planeta Terra.\" },\n    { word: \"cachorro\", hint: \"Animal de estimação leal.\" },\n    { word: \"guitarra\", hint: \"Instrumento musical de cordas.\" },\n    { word: \"amarelo\", hint: \"Cor brilhante e quente.\" },\n    { word: \"fotografia\", hint: \"Arte de capturar imagens.\" },\n    { word: \"amigo\", hint: \"Pessoa próxima e confiável.\" },\n    { word: \"coração\", hint: \"Órgão que bombeia sangue.\" },\n    { word: \"viagem\", hint: \"Exploração de novos lugares.\" },\n    { word: \"café\", hint: \"Bebida quente e estimulante.\" },\n    { word: \"montanha\", hint: \"Elevação natural da terra.\" },\n    { word: \"rima\", hint: \"Palavras com sons semelhantes.\" },\n    { word: \"pintura\", hint: \"Arte de criar imagens visuais.\" },\n    { word: \"coração\", hint: \"Órgão que bombeia sangue.\" },\n    { word: \"paraíso\", hint: \"Lugar perfeito e harmonioso.\" },\n    { word: \"família\", hint: \"Parentes próximos e queridos.\" },\n    { word: \"escola\", hint: \"Local de aprendizado.\" },\n    { word: \"dinheiro\", hint: \"Meio de troca e pagamento.\" },\n    { word: \"folha\", hint: \"Parte verde de uma planta.\" },\n    { word: \"tempo\", hint: \"A medida das horas.\" },\n    { word: \"fogo\", hint: \"Uma forma de energia.\" },\n    { word: \"arco-íris\", hint: \"Uma mistura colorida no céu.\" },\n    { word: \"cidade\", hint: \"Grande área urbana.\" },\n    { word: \"amor\", hint: \"Sentimento profundo de afeição.\" },\n    { word: \"livro\", hint: \"Uma coleção de histórias escritas.\" },\n    { word: \"felicidade\", hint: \"Estado de alegria e contentamento.\" },\n    { word: \"computador\", hint: \"Máquina que processa informações.\" },\n    { word: \"chuva\", hint: \"Gotas de água que caem do céu.\" },\n    { word: \"praia\", hint: \"Litoral com areia e água do mar.\" },\n    { word: \"restaurante\", hint: \"Local para refeições.\" },\n    { word: \"sorriso\", hint: \"Expressão facial de alegria.\" },\n    { word: \"mundo\", hint: \"O planeta Terra.\" },\n    { word: \"cachorro\", hint: \"Animal de estimação leal.\" },\n    { word: \"guitarra\", hint: \"Instrumento musical de cordas.\" },\n    { word: \"amarelo\", hint: \"Cor brilhante e quente.\" },\n    { word: \"fotografia\", hint: \"Arte de capturar imagens.\" },\n    { word: \"amigo\", hint: \"Pessoa próxima e confiável.\" },\n    { word: \"coração\", hint: \"Órgão que bombeia sangue.\" },\n    { word: \"viagem\", hint: \"Exploração de novos lugares.\" },\n    { word: \"café\", hint: \"Bebida quente e estimulante.\" },\n    { word: \"montanha\", hint: \"Elevação natural da terra.\" },\n    { word: \"rima\", hint: \"Palavras com sons semelhantes.\" },\n    { word: \"pintura\", hint: \"Arte de criar imagens visuais.\" },\n    { word: \"computador\", hint: \"Máquina que processa informações.\" },\n    { word: \"chuva\", hint: \"Gotas de água que caem do céu.\" },\n    { word: \"paraíso\", hint: \"Lugar perfeito e harmonioso.\" },\n    { word: \"família\", hint: \"Parentes próximos e queridos.\" },\n    { word: \"escola\", hint: \"Local de aprendizado.\" },\n    { word: \"dinheiro\", hint: \"Meio de troca e pagamento.\" },\n    { word: \"folha\", hint: \"Parte verde de uma planta.\" },\n    { word: \"tempo\", hint: \"A medida das horas.\" },\n    { word: \"fogo\", hint: \"Uma forma de energia.\" },\n    { word: \"arco-íris\", hint: \"Uma mistura colorida no céu.\" },\n    { word: \"cidade\", hint: \"Grande área urbana.\" },\n    { word: \"amor\", hint: \"Sentimento profundo de afeição.\" },\n    { word: \"livro\", hint: \"Uma coleção de histórias escritas.\" },\n    { word: \"felicidade\", hint: \"Estado de alegria e contentamento.\" },\n    { word: \"computador\", hint: \"Máquina que processa informações.\" },\n    { word: \"chuva\", hint: \"Gotas de água que caem do céu.\" },\n    { word: \"praia\", hint: \"Litoral com areia e água do mar.\" },\n    { word: \"restaurante\", hint: \"Local para refeições.\" },\n    { word: \"sorriso\", hint: \"Expressão facial de alegria.\" },\n    { word: \"mundo\", hint: \"O planeta Terra.\" },\n    { word: \"cachorro\", hint: \"Animal de estimação leal.\" },\n    { word: \"guitarra\", hint: \"Instrumento musical de cordas.\" },\n    { word: \"amarelo\", hint: \"Cor brilhante e quente.\" },\n    { word: \"fotografia\", hint: \"Arte de capturar imagens.\" },\n    { word: \"amigo\", hint: \"Pessoa próxima e confiável.\" },\n];\nexports.default = wordList;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}